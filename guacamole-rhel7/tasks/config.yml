---
- name: config | Ensuring Guacamole Folders Exist
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ guacamole_tomcat_user }}"
    group: "{{ guacamole_tomcat_user }}"

  with_items:
    - /etc/guacamole
    - /etc/guacamole/lib
    - /etc/guacamole/extensions

- name: config | Configuring guacamole.properties
  template:
    src: guacamole.properties.j2
    dest: /etc/guacamole/guacamole.properties
    owner: "{{ guacamole_tomcat_user }}"
    group: "{{ guacamole_tomcat_user }}"

- name: config | Downloading Auth JDBC Library
  unarchive:
    src: "{{ guacamole_jdbc_dl }}"
    dest: "{{ guacamole_src_dir }}"
    remote_src: true

- block:

  - name: config | postgresql init
    command: postgresql-setup initdb
    ignore_errors: True

  - name: config | postgresql auth configure
    template: 
      src: pg_hba.conf.j2 
      dest: /var/lib/pgsql/data/pg_hba.conf 
      owner: postgres
      group: postgres

  - name: config | postgresql service
    service:
      name: postgresql
      enabled: true
      state: started

  - name: config | Copying Auth JDBC Connector
    copy:
      src: "{{ guacamole_src_dir + '/' + 'guacamole-auth-jdbc-' + guacamole_version + '/postgresql/' + 'guacamole-auth-jdbc-postgresql-' + guacamole_version + '.jar' }}"
      dest: /etc/guacamole/extensions/
      owner: "{{ guacamole_tomcat_user }}"
      group: "{{ guacamole_tomcat_user }}"
      remote_src: true
  
  - name: config | Downloading PostgreSQL Connector
    get_url:
      url: "{{ guacamole_postgresql_connector_dl }}"
      dest: "{{ guacamole_src_dir }}"
  
  - name: config | Copying PostgreSQL Connector
    copy:
      src: "{{ guacamole_src_dir + '/' + guacamole_postgresql_connector_package }}"
      dest: /etc/guacamole/lib/
      owner: "{{ guacamole_tomcat_user }}"
      group: "{{ guacamole_tomcat_user }}"
      remote_src: true
  
  - name: config | Creating Guacamole DB
    postgresql_db:
      name: "{{ guacamole_postgresql_db['name'] }}"
      state: present
    become_user: postgres
  
  - name: config | Creating Guacamole DB User
    postgresql_user:
      db: "{{ guacamole_postgresql_db['name'] }}"
      name: "{{ guacamole_postgresql_db['username'] }}"
      password: "{{ guacamole_postgresql_db['password'] }}"
      state: present
    become_user: postgres
  
  - name: config | Checking If DB Has Been Populated
    stat:
      path: /etc/guacamole/.db_populated
    register: _guacamole_db_populated_check
  
  - name: config | Popluating DB
    shell: psql "{{ guacamole_postgresql_db['name'] }}" < "{{ guacamole_src_dir + '/' + 'guacamole-auth-jdbc-' + guacamole_version + '/postgresql/schema/' + item }}"
  
    become_user: postgres
    register: _guacamole_db_populated
    with_items:
      - 001-create-schema.sql
      - 002-create-admin-user.sql
    when: not _guacamole_db_populated_check['stat']['exists']
  
  - name: config | Setting DB permissions
    postgresql_privs:
      database: "{{ guacamole_postgresql_db['name'] }}"
      schema: public
      role: "{{ guacamole_postgresql_db['username'] }}"
      type: table
      obj: ALL_IN_SCHEMA
      privs: SELECT,INSERT,UPDATE,DELETE
    become_user: postgres
  
  - name: config | Setting DB permissions
    postgresql_privs:
      database: "{{ guacamole_postgresql_db['name'] }}"
      schema: public
      role: "{{ guacamole_postgresql_db['username'] }}"
      type: sequence
      obj: ALL_IN_SCHEMA
      privs: all
    become_user: postgres

  when: guacamole_postgresql_auth 
 
- block:
  - name: config | mariadb service
    service:
      name: mariadb
      enabled: true
      state: started

  - name: config | Copying Auth JDBC Connector
    copy:
      src: "{{ guacamole_src_dir + '/' + 'guacamole-auth-jdbc-' + guacamole_version + '/mysql/' + 'guacamole-auth-jdbc-mysql-' + guacamole_version + '.jar' }}"
      dest: /etc/guacamole/extensions/
      owner: "{{ guacamole_tomcat_user }}"
      group: "{{ guacamole_tomcat_user }}"
      remote_src: true
  
  - name: config | Downloading MySQL Connector
    unarchive:
      src: "{{ guacamole_mysql_connector_dl }}"
      dest: "{{ guacamole_src_dir }}"
      remote_src: true
  
  - name: config | Copying MySQL Connector
    copy:
      src: "{{ guacamole_src_dir + '/' + 'mysql-connector-java-' + guacamole_mysql_connector_version + '/' + 'mysql-connector-java-' + guacamole_mysql_connector_version + '.jar' }}"
      dest: /etc/guacamole/lib/
      owner: "{{ guacamole_tomcat_user }}"
      group: "{{ guacamole_tomcat_user }}"
      remote_src: true
  
  - name: config | Creating Guacamole DB
    mysql_db:
      name: "{{ guacamole_mysql_db['name'] }}"
      login_host: "{{ guacamole_mysql_db['host'] }}"
      login_port: "{{ guacamole_mysql_db['port'] }}"
      state: present
  
  - name: config | Creating Guacamole DB User
    mysql_user:
      name: "{{ guacamole_mysql_db['username'] }}"
      password: "{{ guacamole_mysql_db['password'] }}"
      login_host: "{{ guacamole_mysql_db['host'] }}"
      login_port: "{{ guacamole_mysql_db['port'] }}"
      priv: "{{ guacamole_mysql_db['name'] + '.*:GRANT,SELECT,INSERT,UPDATE,DELETE' }}"
      state: present
  
  - name: config | Checking If DB Has Been Populated
    stat:
      path: /etc/guacamole/.db_populated
    register: _guacamole_db_populated_check
  
  - name: config | Popluating DB
    mysql_db:
      name: "{{ guacamole_mysql_db['name'] }}"
      login_host: "{{ guacamole_mysql_db['host'] }}"
      login_port: "{{ guacamole_mysql_db['port'] }}"
      state: import
      target: "{{ guacamole_src_dir + '/' + 'guacamole-auth-jdbc-' + guacamole_version + '/mysql/schema/' + item }}"
    register: _guacamole_db_populated
    with_items:
      - 001-create-schema.sql
      - 002-create-admin-user.sql
    when: not _guacamole_db_populated_check['stat']['exists']
  
  - name: config | Marking DB As Populated
    file:
      path: /etc/guacamole/.db_populated
      state: touch
    when: _guacamole_db_populated['changed']

  when: guacamole_mysql_auth

- name: config | Creating Tomcat symlink For guacamole.properties
  file:
    src: /etc/guacamole
    dest: "{{ '/usr/share/' + guacamole_tomcat + '/.guacamole' }}"
    state: link
    owner: "{{ guacamole_tomcat_user }}"
    group: "{{ guacamole_tomcat_user }}"

- meta: flush_handlers

